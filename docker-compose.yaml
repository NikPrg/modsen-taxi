services:
  postgres:
    container_name: postgres-taxi
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: modsen-taxi-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin-ui-taxi
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: pdfmain.user@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password123
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper-modsen
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1


  kafka-ui:
    container_name: kafka-ui-modsen
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9090:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    volumes:
      - ./data/message.json:/data/message.json
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                    cub kafka-ready -b kafka:29092 1 30 && \
                    kafka-topics --create --topic driver-info-events --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
                    kafka-topics --create --topic ride-info-events --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
                    kafka-topics --create --topic driver-status-events --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
                    kafka-console-producer --bootstrap-server kafka:29092 --topic users < /data/message.json'"

volumes:
  pgadmin-data:
  pgdata:

networks:
  postgres:
    driver: bridge