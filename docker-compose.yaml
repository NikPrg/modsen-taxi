services:
  postgres:
    container_name: postgres-taxi
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: modsen-taxi-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      develop:
        aliases:
          - "postgres"

  pgadmin:
    container_name: pgadmin-ui-taxi
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: pdfmain.user@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password123
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - develop

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper-modsen
    ports:
      - "2181:2181"
    networks:
      - kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    networks:
      - kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui-modsen
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9090:8080
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  kafka-init-topics:
    image: bitnami/kafka:3.5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka-init-topics.sh:/opt/bitnami/kafka-init-topics.sh
    depends_on:
      - kafka
    networks:
      - kafka
    command: "/opt/bitnami/kafka-init-topics.sh"

  redis:
    image: redis:7.2-rc-alpine
    container_name: redis
    networks:
      - develop
    ports:
      - "6379:6379"

  eurekaservice:
    container_name: eureka-service-modsen
    build:
      context: eureka-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      develop:
        aliases:
          - "eurekaservice"

  api-gateway-service:
    build:
      context: api-gateway-service
      dockerfile: Dockerfile
    container_name: api-gateway-service
    depends_on:
      - redis
    networks:
      - develop
    ports:
      - 7777:7777
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eurekaservice:8761/eureka/
      - SPRING_DATA_REDIS_HOST=redis:8761


  card-service:
    build:
      context: card-service
      dockerfile: Dockerfile
    container_name: card-service
    depends_on:
      - postgres
      - kafka
    networks:
      - develop
      - kafka
    ports:
      - 8083:8083
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eurekaservice:8761/eureka/
      - SPRING_KAFKA_CONSUMER_GROUP_ID=card-service-group
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/taxi-cards
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker

  driver-service:
    build:
      context: driver-service
      dockerfile: Dockerfile
    container_name: driver-service
    depends_on:
      - postgres
      - kafka
    networks:
      - develop
      - kafka
    ports:
      - 8081:8081
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eurekaservice:8761/eureka/
      - SPRING_KAFKA_CONSUMER_GROUP_ID=driver-service-group
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/taxi-drivers
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker

  passenger-service:
    build:
      context: passenger-service
      dockerfile: Dockerfile
    container_name: passenger-service
    depends_on:
      - postgres
      - kafka
    networks:
      - develop
      - kafka
    ports:
      - 8080:8080
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eurekaservice:8761/eureka/
      - SPRING_KAFKA_CONSUMER_GROUP_ID=passenger-service-group
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/modsen-taxi-db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker

  payment-service:
    build:
      context: payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    depends_on:
      - postgres
      - kafka
    networks:
      - develop
      - kafka
    ports:
      - 8084:8084
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eurekaservice:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/taxi-card-balances
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker

  rides-service:
    build:
      context: rides-service
      dockerfile: Dockerfile
    container_name: rides-service
    depends_on:
      - postgres
      - kafka
    networks:
      - develop
      - kafka
    ports:
      - 8082:8082
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eurekaservice:8761/eureka/
      - SPRING_KAFKA_CONSUMER_GROUP_ID=rides-service-group
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/taxi-rides
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=docker

networks:
  kafka:
    driver: bridge
  develop:
    driver: bridge

volumes:
  pgadmin-data:
  pgdata:
